<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 配置Controller扫描 -->
	<context:component-scan base-package="com.shan.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 配置注解驱动 -->
	<mvc:annotation-driven />

	<!-- 对静态资源放行 说明：location元素表示webapp目录下的static包下的所有文件；mapping元素表示以/static开头的所有请求路径，如/static/a 
		或者/static/a/b; 该配置的作用是：DispatcherServlet不会拦截以/static开头的所有请求路径，并当作静态资源交由Servlet处理 -->
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/fonts/" mapping="/fonts/**" />
	<mvc:resources location="/html/" mapping="/html/**" />

	<!-- 配置视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<!-- 后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 文件上传解析器  -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="-1" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<!-- 配置@ResponseBody注解返回对象直接转换成json，但是经过测试不配置也可以 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
       <property name="messageConverters">  
           <list>  
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>  
                <ref bean="mappingJacksonHttpMessageConverter" />  
           </list>  
       </property>  
   </bean> -->
   
   
    <!--配置拦截器, 多个拦截器,顺序执行 -->
  <!--   <mvc:interceptors> 
           <mvc:interceptor>
                    
                       /**的意思是所有文件夹及里面的子文件夹 
                       /*是所有文件夹，不含子文件夹 
                       /是web项目的根目录
                     
                   <mvc:mapping path="/**" /> 
                   需排除拦截的地址  
                    <mvc:exclude-mapping path="/userController/login"/> 
                   <bean  class="com.shan.interceptor.myInterceptor"></bean> 这个类就是我们自定义的Interceptor
          </mvc:interceptor> 
          当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 
    </mvc:interceptors> -->
</beans>